"use strict";(self.webpackChunkvnanikalyan_github_io=self.webpackChunkvnanikalyan_github_io||[]).push([[7914],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4243:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={slug:"Kubernetes",id:"kubernetes-jargon",title:"Lingo",authors:["vnk"],tags:["Containers","Docker","Podman","Kubernetes"],custom_edit_url:null},i=void 0,l={unversionedId:"Containers/Kubernetes/kubernetes-jargon",id:"Containers/Kubernetes/kubernetes-jargon",title:"Lingo",description:"Kubernetes - Jargon",source:"@site/docs/Containers/Kubernetes/kubernetes-jargon.md",sourceDirName:"Containers/Kubernetes",slug:"/Containers/Kubernetes/Kubernetes",permalink:"/docs/Containers/Kubernetes/Kubernetes",draft:!1,editUrl:null,tags:[{label:"Containers",permalink:"/docs/tags/containers"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"Podman",permalink:"/docs/tags/podman"},{label:"Kubernetes",permalink:"/docs/tags/kubernetes"}],version:"current",frontMatter:{slug:"Kubernetes",id:"kubernetes-jargon",title:"Lingo",authors:["vnk"],tags:["Containers","Docker","Podman","Kubernetes"],custom_edit_url:null},sidebar:"containers",previous:{title:"Custom Process",permalink:"/docs/Containers/container custom process"}},s={},u=[],c={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Kubernetes - Jargon",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"Pod")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pod is an abstraction layer that is created on a container(Docker/any other techonoloy) by Kubernetes."),(0,a.kt)("li",{parentName:"ul"},"There can be numerous pods in a Node (Each node is a physical machine or VM)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Service")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Persistent/permenant Static IP Address with a DNS Name (Elastic IP - AWS)"),(0,a.kt)("li",{parentName:"ul"},"Every pod in a node will have a unique IP"),(0,a.kt)("li",{parentName:"ul"},"Communiation between pods in a node happens with that IP"),(0,a.kt)("li",{parentName:"ul"},"What if IP changes then I need to touch all the pods which are using it re-build image etc"),(0,a.kt)("li",{parentName:"ul"},"Solution: Instead of IP its better to use Service(service names)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Ingress")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"route traffic into your cluster"),(0,a.kt)("li",{parentName:"ul"},"Your pods can communicate among themselves but if you want your node to expose to the world"),(0,a.kt)("li",{parentName:"ul"},"You create an internal service and expose it to the world",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In that internal service you mention what all services needs to be exposed etc (Like I AM)"))),(0,a.kt)("li",{parentName:"ul"},"Ingress is tantamount to Nginx")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"ConfigMap")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To store the config data"),(0,a.kt)("li",{parentName:"ul"},"Service name so that you can update the name of the service if it is changed\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Secrets")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"you cannot use ConfigMap to store passwords (Ofcourse you can but its not a best practise)"),(0,a.kt)("li",{parentName:"ul"},"Hence, you store it in Secrets")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Data Storage ")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Its better to have a remote storage(AWS RDS) rather than local storage")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"MiniKube")," - helps you to run both Master and worker nodes on a single physical machine",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"Kubectl")," - command line tool for kubernetes",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"kind"),": Deployment/secret/config"))}p.isMDXComponent=!0}}]);