"use strict";(self.webpackChunkvnanikalyan_github_io=self.webpackChunkvnanikalyan_github_io||[]).push([[2968],{5680:(e,n,t)=>{t.d(n,{xA:()=>l,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(g,i(i({ref:n},l),{},{components:t})):r.createElement(g,i({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8886:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(8168),a=(t(6540),t(5680));const o={slug:"github-actions",id:"github-actions-java-8",title:"Java",authors:["vnk"],tags:["Github Actions","Devops"],custom_edit_url:null},i=void 0,s={unversionedId:"Devops/githubactions/github-actions-java-8",id:"Devops/githubactions/github-actions-java-8",title:"Java",description:"",source:"@site/docs/Devops/githubactions/java-8.md",sourceDirName:"Devops/githubactions",slug:"/Devops/githubactions/github-actions",permalink:"/docs/Devops/githubactions/github-actions",draft:!1,editUrl:null,tags:[{label:"Github Actions",permalink:"/docs/tags/github-actions"},{label:"Devops",permalink:"/docs/tags/devops"}],version:"current",frontMatter:{slug:"github-actions",id:"github-actions-java-8",title:"Java",authors:["vnk"],tags:["Github Actions","Devops"],custom_edit_url:null},sidebar:"devops",next:{title:"node-18",permalink:"/docs/Devops/githubactions/github-actions"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"name: Build and deploy an API\n\non:\n  push:\n    branches:\n      - development\n  workflow_dispatch:\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    # These permissions are needed to interact with GitHub's OIDC Token endpoint.\n    permissions:\n      id-token: write\n      contents: read\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Set up Java version\n        uses: actions/setup-java@v3\n        with:\n          distribution: 'zulu'\n          java-version: '8' # If you want to use java 17 then replace 8 with 17\n      - run: mvn clean install --file pom.xml\n\n      - name: Set current date as env variable\n        run: echo \"NOW=$(date +'%Y-%m-%dt%H-%M-%S')\" >> $GITHUB_ENV  \n      \n      # Building Docker Image\n      - name: Building Docker Image\n        run: docker build . -t build\n      - run: docker images\n\n      # Get Temp AWS Credentials based on the role\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v2\n        with:\n          role-to-assume: arn:aws:iam::account-number:role/role-name\n          aws-region: ap-south-1\n          role-session-name: GithubActionsSession\n      \n      # Get AWS ECR Login Credentials\n      - name: Get login credentials for AWS ECR\n        run: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin account-number.dkr.ecr.ap-south-1.amazonaws.com\n\n      # Tag the Docker Image\n      - name: Tag the docker Image\n        run: docker tag build:latest account-number.dkr.ecr.ap-south-1.amazonaws.com/api:build_${NOW}\n      \n      # Push the Docker Image to ECR\n      - name: Push the Docker Image to ECR\n        run: docker push account-number.dkr.ecr.ap-south-1.amazonaws.com/api:build_${NOW}\n")))}d.isMDXComponent=!0}}]);