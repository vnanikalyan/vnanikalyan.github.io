"use strict";(self.webpackChunkvnanikalyan_github_io=self.webpackChunkvnanikalyan_github_io||[]).push([[6679],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1034:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={slug:"oops-in-js",id:"oops-in-js",title:"OOPs in JS",authors:["vnk"],tags:["NodeJs","oops","Javascript"],custom_edit_url:null},o=void 0,i={unversionedId:"NodeJs/oops-in-js",id:"NodeJs/oops-in-js",title:"OOPs in JS",description:"OOPS - It is a paradigm, programming style rather than a programming language.",source:"@site/docs/NodeJs/oops-in-js.md",sourceDirName:"NodeJs",slug:"/NodeJs/oops-in-js",permalink:"/docs/NodeJs/oops-in-js",draft:!1,editUrl:null,tags:[{label:"NodeJs",permalink:"/docs/tags/node-js"},{label:"oops",permalink:"/docs/tags/oops"},{label:"Javascript",permalink:"/docs/tags/javascript"}],version:"current",frontMatter:{slug:"oops-in-js",id:"oops-in-js",title:"OOPs in JS",authors:["vnk"],tags:["NodeJs","oops","Javascript"],custom_edit_url:null},sidebar:"mySidebar",next:{title:"Array functions",permalink:"/docs/NodeJs/array-funcs"}},s={},u=[{value:"1. Encapsulation",id:"1-encapsulation",level:4},{value:"2. Abstraction",id:"2-abstraction",level:4},{value:"3. Inheritance",id:"3-inheritance",level:4},{value:"4. Poly-morphism",id:"4-poly-morphism",level:4}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OOPS")," - It is a paradigm, programming style rather than a programming language.",(0,a.kt)("br",{parentName:"p"}),"\n","Programming languages that use OOPS  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Java  "),(0,a.kt)("li",{parentName:"ul"},"C#  "),(0,a.kt)("li",{parentName:"ul"},"C++")),(0,a.kt)("p",null,"Four pillars of OOPS  "),(0,a.kt)("h4",{id:"1-encapsulation"},"1. Encapsulation"),(0,a.kt)("p",null,"Function and the data operating on it will be together",(0,a.kt)("br",{parentName:"p"}),"\n","Ex: Class"),(0,a.kt)("p",null,"In Procedural language they(Data, functions) are decoupled  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A good function is a function with no arguments  "),(0,a.kt)("li",{parentName:"ul"},"In PL you will end up with more functions and more parameters  "),(0,a.kt)("li",{parentName:"ul"},"To solve this problem OOPS has come up")),(0,a.kt)("h4",{id:"2-abstraction"},"2. Abstraction"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hiding some properties to the outside world  "),(0,a.kt)("li",{parentName:"ul"},"Class has properties like public, private, protected")),(0,a.kt)("h4",{id:"3-inheritance"},"3. Inheritance"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Instead of re-inventing the wheel we can simply inherit the class where in we will get all the properties and methods from the base class\nEx: HtmlElement Class -> derived in select\n")),(0,a.kt)("h4",{id:"4-poly-morphism"},"4. Poly-morphism"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"render method in will behave differntly ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"OOPs in Javascript"),"  "),(0,a.kt)("p",null,"1) Object literal",(0,a.kt)("br",{parentName:"p"}),"\n","let obj = {};"),(0,a.kt)("p",null,"2) Two ways to create Object"),(0,a.kt)("p",null,"i) ",(0,a.kt)("strong",{parentName:"p"},"Factory Function")," - Function that returns an object   \t\t"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function createCircle(radius) {\n            return {\n                radius,\n                draw: function() {\n                    console.log('draw');\n                    }\n                };\n            }\n\nconst circle = createCircle(1);        \n")),(0,a.kt)("p",null,"ii) ",(0,a.kt)("strong",{parentName:"p"},"Constructor Function")," - This is what we used in Grene"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function Circle(radius) {  //this means it is the reference of the object that is executing the code\n    this.radius = radius,\n    this.draw = function() {\n                    console.log('draw');\n                    }\n                }\n                //You do not write an explicit return statement\n            }\n\nconst another = new Circle(1);      \n")),(0,a.kt)("p",null,"when you put ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," three things happen  "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"new operator will create an empty object - {}  "),(0,a.kt)("li",{parentName:"ol"},"will set 'this' to point to that object (created in step 1). By default this will point to global object  ")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In browser window is the global object  "),(0,a.kt)("li",{parentName:"ul"},"In nodeJs, global is the global object  ")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"It will return the object from the function. In our case it is Circle returning an object. We wont explicitly write a return statement. Still it will return an object.")),(0,a.kt)("p",null,"3) ",(0,a.kt)("strong",{parentName:"p"},"Constructor Property"),(0,a.kt)("br",{parentName:"p"}),"\n","Every Object you create will have a 'constructor' property.\nIt has the information of which function created it.  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Quoting the previous example  "),(0,a.kt)("li",{parentName:"ul"},"another.constructor - We will be able to see the function that created the object")),(0,a.kt)("p",null,"4) Functions are Objects"),(0,a.kt)("p",null,"5) Datatypes  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Valuetypes - also called as PRIMITIVES\nNumber, String, Boolean, Symbol, undefined, null"),(0,a.kt)("li",{parentName:"ul"},"Referencetypes\nObject, Array, Function")),(0,a.kt)("p",null,"6) Getters, Setters\nIn Constructor function",(0,a.kt)("br",{parentName:"p"}),"\n","If you want a property value to set/get from outside"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function nani() {\n    let x = 5;\n    Object.defineProperty(this, x, {\n        get: function() {\n            return x;\n        },\n        set: function(value) {\n            x = value;\n        }\n    })\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"References")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=PFmuCDHHpwk&ab_channel=ProgrammingwithMosh"},"youtube link"))))}c.isMDXComponent=!0}}]);