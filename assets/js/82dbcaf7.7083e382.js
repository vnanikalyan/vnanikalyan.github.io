"use strict";(self.webpackChunkvnanikalyan_github_io=self.webpackChunkvnanikalyan_github_io||[]).push([[9366],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),g=a,y=p["".concat(l,".").concat(g)]||p[g]||m[g]||o;return t?r.createElement(y,s(s({ref:n},u),{},{components:t})):r.createElement(y,s({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=g;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},4996:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(8168),a=(t(6540),t(5680));const o={slug:"container custom process",id:"container-custom-process",title:"Custom Process",authors:["vnk"],tags:["Containers","Docker","Podman","Kernel"],custom_edit_url:null},s=void 0,i={unversionedId:"Containers/container-custom-process",id:"Containers/container-custom-process",title:"Custom Process",description:"We can create a container proces in Golang with less than 100 lines of code. We do not have to be proficient in Golang. But knowing the concepts is enough as they are universal.",source:"@site/docs/Containers/custom-process.md",sourceDirName:"Containers",slug:"/Containers/container custom process",permalink:"/docs/Containers/container custom process",draft:!1,editUrl:null,tags:[{label:"Containers",permalink:"/docs/tags/containers"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"Podman",permalink:"/docs/tags/podman"},{label:"Kernel",permalink:"/docs/tags/kernel"}],version:"current",frontMatter:{slug:"container custom process",id:"container-custom-process",title:"Custom Process",authors:["vnk"],tags:["Containers","Docker","Podman","Kernel"],custom_edit_url:null},sidebar:"containers",previous:{title:"Container Basics",permalink:"/docs/Containers/container-basics"},next:{title:"Lingo",permalink:"/docs/Containers/Kubernetes/Kubernetes"}},l={},c=[{value:"1. namespaces",id:"1-namespaces",level:4},{value:"2. cgroups",id:"2-cgroups",level:4},{value:"3. Rootless Containers",id:"3-rootless-containers",level:4},{value:"4. Fork Bomb",id:"4-fork-bomb",level:4},{value:"References",id:"references",level:4}],u={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"We can create a container proces in Golang with less than 100 lines of code. We do not have to be proficient in Golang. But knowing the concepts is enough as they are universal."),(0,a.yg)("h4",{id:"1-namespaces"},"1. namespaces"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Will let what container should see."),(0,a.yg)("li",{parentName:"ul"},"What you can See?",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Unix Timesharing System"),(0,a.yg)("li",{parentName:"ul"},"Process IDs"),(0,a.yg)("li",{parentName:"ul"},"File system (mount points)"),(0,a.yg)("li",{parentName:"ul"},"Network"),(0,a.yg)("li",{parentName:"ul"},"Users (User IDs)"),(0,a.yg)("li",{parentName:"ul"},"IPC (InterProcess Comms)"))),(0,a.yg)("li",{parentName:"ul"},"namespaces are created with ",(0,a.yg)("strong",{parentName:"li"},"syscalls"))),(0,a.yg)("h4",{id:"2-cgroups"},"2. cgroups"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Will let what resources can a container can access."),(0,a.yg)("li",{parentName:"ul"},"What you can use?",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"CPU"),(0,a.yg)("li",{parentName:"ul"},"Memory"),(0,a.yg)("li",{parentName:"ul"},"Disk I/O"),(0,a.yg)("li",{parentName:"ul"},"Network"),(0,a.yg)("li",{parentName:"ul"},"Device Permission (/dev)")))),(0,a.yg)("h4",{id:"3-rootless-containers"},"3. Rootless Containers"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Even if you are not the root of the host machine still you can create a container process. (for more understanding check the resources mentioned under reference section)")),(0,a.yg)("h4",{id:"4-fork-bomb"},"4. Fork Bomb"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},":() { : | : & }; :"),(0,a.yg)("li",{parentName:"ul"},"We can restrict our container to spawn a maximum of 20 processes. In cases of fork bomb it will not exhaust our entire host's resources that are available to our container process via Kernel.")),(0,a.yg)("h4",{id:"references"},"References"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=_TsSmSu57Zo&ab_channel=ContainerCamp"},"https://www.youtube.com/watch?v=_TsSmSu57Zo&ab_channel=ContainerCamp")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/lizrice/containers-from-scratch/blob/master/main.go"},"https://github.com/lizrice/containers-from-scratch/blob/master/main.go"))))}m.isMDXComponent=!0}}]);