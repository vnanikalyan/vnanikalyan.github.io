"use strict";(self.webpackChunkvnanikalyan_github_io=self.webpackChunkvnanikalyan_github_io||[]).push([[6540],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),b=o,m=p["".concat(c,".").concat(b)]||p[b]||d[b]||i;return t?r.createElement(m,a(a({ref:n},l),{},{components:t})):r.createElement(m,a({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=b;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},8815:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const i={slug:"github-actions",id:"github-actions-node-18",title:"node-18",authors:["vnk"],tags:["Github Actions","Devops"],custom_edit_url:null},a=void 0,s={unversionedId:"Devops/githubactions/github-actions-node-18",id:"Devops/githubactions/github-actions-node-18",title:"node-18",description:"",source:"@site/docs/Devops/githubactions/node-18.md",sourceDirName:"Devops/githubactions",slug:"/Devops/githubactions/github-actions",permalink:"/docs/Devops/githubactions/github-actions",draft:!1,editUrl:null,tags:[{label:"Github Actions",permalink:"/docs/tags/github-actions"},{label:"Devops",permalink:"/docs/tags/devops"}],version:"current",frontMatter:{slug:"github-actions",id:"github-actions-node-18",title:"node-18",authors:["vnk"],tags:["Github Actions","Devops"],custom_edit_url:null},sidebar:"devops",previous:{title:"Java",permalink:"/docs/Devops/githubactions/github-actions"},next:{title:"Java",permalink:"/docs/Devops/dockerfiles/docker-files"}},c={},u=[],l={toc:u};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Build and deploy a website\n\non:\n  push:\n    branches:\n      - development\n  workflow_dispatch:\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    # These permissions are needed to interact with GitHub's OIDC Token endpoint.\n    permissions:\n      id-token: write\n      contents: read\n\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n      - run: npm install --legacy-peer-deps\n      - run: npm run build\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v2\n        with:\n          role-to-assume: arn:aws:iam::account-number:role/role-name\n          aws-region: ap-south-1\n          role-session-name: GithubActionsSession\n      \n      #- run: aws sts get-caller-identity\n\n      - name: Set current date as env variable\n        run: echo \"NOW=$(date +'%Y-%m-%dT%H:%M:%S')\" >> $GITHUB_ENV         \n      \n      - name: Zip the generated build files\n        run: zip -r build_${NOW}.zip dist/web-app \n      \n      - name: Copy the build zip file to S3 Bucket\n        run: aws s3 cp build_${NOW}.zip s3://mywebsite-builds/web-app/\n      \n      - name: Copy files to S3 bucket with the AWS CLI\n        run: |\n          aws s3 sync dist/web-app s3://dev.mywebsite.com\n")))}p.isMDXComponent=!0}}]);